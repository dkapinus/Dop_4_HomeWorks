{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/untitled/src/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User() {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const onChangeHandler = e => setUserName(e.currentTarget.value);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: userName,\n      onChange: onChangeHandler,\n      onBlur: () => {\n        setText(userName);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(User, \"zS70O3i9Oz06ZbMGPpDOCOtkZPw=\");\n_c = User;\nReactDOM.render( /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 25,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n// Что надо написать вместо ххх,\n// чтобы после вывода текста в параграф содержимое формы ввода очищалось?\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useState","ReactDOM","User","userName","setUserName","text","setText","onChangeHandler","e","currentTarget","value","render","document","getElementById"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/untitled/src/index.tsx"],"sourcesContent":["import React, {useState, MouseEvent, ChangeEvent} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction User() {\n    const [userName, setUserName] = useState<string>(\"\")\n    const [text, setText] = useState<string>(\"\")\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement> )=> setUserName(e.currentTarget.value)\n    return (\n        <div>\n            <input\n                value={userName}\n                onChange={onChangeHandler}\n                onBlur={()=> {\n\n                    setText(userName)\n                }}\n            />\n            <p>{text}</p>\n        </div>\n    )\n}\n\nReactDOM.render(\n    <User/>, document.getElementById('root')\n);\n// Что надо написать вместо ххх,\n// чтобы после вывода текста в параграф содержимое формы ввода очищалось?\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAgC,OAAO;AAC9D,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AAAC;AAErB,SAASC,IAAI,GAAG;EAAA;EACZ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGJ,QAAQ,CAAS,EAAE,CAAC;EACpD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAC5C,MAAMO,eAAe,GAAIC,CAAgC,IAAKJ,WAAW,CAACI,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EAChG,oBACI;IAAA,wBACI;MACI,KAAK,EAAEP,QAAS;MAChB,QAAQ,EAAEI,eAAgB;MAC1B,MAAM,EAAE,MAAK;QAETD,OAAO,CAACH,QAAQ,CAAC;MACrB;IAAE;MAAA;MAAA;MAAA;IAAA,QACJ,eACF;MAAA,UAAIE;IAAI;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AAEd;AAAC,GAjBQH,IAAI;AAAA,KAAJA,IAAI;AAmBbD,QAAQ,CAACU,MAAM,eACX,QAAC,IAAI;EAAA;EAAA;EAAA;AAAA,QAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAC3C;AACD;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}