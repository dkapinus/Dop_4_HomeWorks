{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/untitled/src/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction User(props) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [\"User \", props.name, \": \", props.age, \" y.o.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = User;\nfunction UsersList() {\n  _s();\n  const state = [{\n    id: 1,\n    name: \"Bob\",\n    age: 34\n  }, {\n    id: 2,\n    name: \"Alex\",\n    age: 25\n  }, {\n    id: 3,\n    name: \"Ann\",\n    age: 30\n  }, {\n    id: 4,\n    name: \"John\",\n    age: 23\n  }];\n  const users = [{\n    id: 1,\n    userName: \"Bob\",\n    age: 34\n  }, {\n    id: 2,\n    userName: \"Alex\",\n    age: 25\n  }, {\n    id: 3,\n    userName: \"Ann\",\n    age: 30\n  }, {\n    id: 4,\n    userName: \"John\",\n    age: 23\n  }];\n  const [usersList, setUsersList] = useState(state || users);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"User list:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0422\\u0443\\u0442 \\u0431\\u0443\\u0434\\u0435\\u0442 \\u0441\\u043F\\u0438\\u0441\\u043E\\u043A \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(UsersList, \"AyxD+0L3s20dtio2a9ej3aaBgBM=\");\n_c2 = UsersList;\nReactDOM.render( /*#__PURE__*/_jsxDEV(UsersList, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 5\n}, this), document.getElementById('root'));\n// Что надо написать вместо XXX, чтобы код работал?\n// ❗ Если мы отмапим массив, то должны увидеть данные пользователей\n// ❗ Ответ дать минимально возможным объёмом кода\nvar _c, _c2;\n$RefreshReg$(_c, \"User\");\n$RefreshReg$(_c2, \"UsersList\");","map":{"version":3,"names":["React","useState","ReactDOM","User","props","name","age","UsersList","state","id","users","userName","usersList","setUsersList","render","document","getElementById"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/untitled/src/index.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\ntype UserType = {\n    id: number\n    name: string\n    age: number\n}\n\nfunction User(props: UserType) {\n    return (\n        <li>User {props.name}: {props.age} y.o.</li>\n    )\n}\n\nfunction UsersList() {\n    const state = [\n        {id: 1, name: \"Bob\", age: 34},\n        {id: 2, name: \"Alex\", age: 25},\n        {id: 3, name: \"Ann\", age: 30},\n        {id: 4, name: \"John\", age: 23},\n    ]\n    const users = [\n        {id: 1, userName: \"Bob\", age: 34},\n        {id: 2, userName: \"Alex\", age: 25},\n        {id: 3, userName: \"Ann\", age: 30},\n        {id: 4, userName: \"John\", age: 23},\n    ]\n\n    const [usersList, setUsersList] = useState<Array<UserType>>(state||users)\n    return (\n        <main>\n            <h5>User list:</h5>\n            <p>Тут будет список пользователей</p>\n        </main>\n    )\n}\n\nReactDOM.render(\n    <UsersList/>, document.getElementById('root')\n);\n// Что надо написать вместо XXX, чтобы код работал?\n// ❗ Если мы отмапим массив, то должны увидеть данные пользователей\n// ❗ Ответ дать минимально возможным объёмом кода\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,aAAa;AAAC;AAQrB,SAASC,IAAI,CAACC,KAAe,EAAE;EAC3B,oBACI;IAAA,oBAAUA,KAAK,CAACC,IAAI,QAAID,KAAK,CAACE,GAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAAW;AAEpD;AAAC,KAJQH,IAAI;AAMb,SAASI,SAAS,GAAG;EAAA;EACjB,MAAMC,KAAK,GAAG,CACV;IAACC,EAAE,EAAE,CAAC;IAAEJ,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE;EAAE,CAAC,EAC7B;IAACG,EAAE,EAAE,CAAC;IAAEJ,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAE,CAAC,EAC9B;IAACG,EAAE,EAAE,CAAC;IAAEJ,IAAI,EAAE,KAAK;IAAEC,GAAG,EAAE;EAAE,CAAC,EAC7B;IAACG,EAAE,EAAE,CAAC;IAAEJ,IAAI,EAAE,MAAM;IAAEC,GAAG,EAAE;EAAE,CAAC,CACjC;EACD,MAAMI,KAAK,GAAG,CACV;IAACD,EAAE,EAAE,CAAC;IAAEE,QAAQ,EAAE,KAAK;IAAEL,GAAG,EAAE;EAAE,CAAC,EACjC;IAACG,EAAE,EAAE,CAAC;IAAEE,QAAQ,EAAE,MAAM;IAAEL,GAAG,EAAE;EAAE,CAAC,EAClC;IAACG,EAAE,EAAE,CAAC;IAAEE,QAAQ,EAAE,KAAK;IAAEL,GAAG,EAAE;EAAE,CAAC,EACjC;IAACG,EAAE,EAAE,CAAC;IAAEE,QAAQ,EAAE,MAAM;IAAEL,GAAG,EAAE;EAAE,CAAC,CACrC;EAED,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAkBO,KAAK,IAAEE,KAAK,CAAC;EACzE,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAmB,eACnB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqC;EAAA;IAAA;IAAA;IAAA;EAAA,QAClC;AAEf;AAAC,GArBQH,SAAS;AAAA,MAATA,SAAS;AAuBlBL,QAAQ,CAACY,MAAM,eACX,QAAC,SAAS;EAAA;EAAA;EAAA;AAAA,QAAE,EAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAChD;AACD;AACA;AACA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}