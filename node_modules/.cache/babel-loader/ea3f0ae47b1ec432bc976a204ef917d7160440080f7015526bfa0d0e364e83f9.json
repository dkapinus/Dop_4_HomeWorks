{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriakapinus/Documents/MyToDolist/untitled/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App(props) {\n  _s();\n  let [state, setState] = useState([]);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(response => response.json()).then(json => setState(json));\n  }, [state]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SxusK6EkkXVGWNn5GQw8L40cSXc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","App","props","state","setState","fetch","then","response","json"],"sources":["/Users/viktoriakapinus/Documents/MyToDolist/untitled/src/App.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n\nimport './App.css';\n\ntype AppType = {\n  id:string\n  title:string\n  body:string;\n}\n\nfunction App(props:AppType) {\n\n  let [state,setState]=useState<Array<string>>([])\n  useEffect(()=>{fetch('https://jsonplaceholder.typicode.com/posts')\n      .then(response => response.json())\n      .then(json => setState(json))},[state])\n  return (\n    <div className=\"App\">\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAEhD,OAAO,WAAW;AAAC;AAQnB,SAASC,GAAG,CAACC,KAAa,EAAE;EAAA;EAE1B,IAAI,CAACC,KAAK,EAACC,QAAQ,CAAC,GAACJ,QAAQ,CAAgB,EAAE,CAAC;EAChDD,SAAS,CAAC,MAAI;IAACM,KAAK,CAAC,4CAA4C,CAAC,CAC7DC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACE,IAAI,IAAIJ,QAAQ,CAACI,IAAI,CAAC,CAAC;EAAA,CAAC,EAAC,CAACL,KAAK,CAAC,CAAC;EAC3C,oBACE;IAAK,SAAS,EAAC;EAAK;IAAA;IAAA;IAAA;EAAA,QAEd;AAEV;AAAC,GAXQF,GAAG;AAAA,KAAHA,GAAG;AAaZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}